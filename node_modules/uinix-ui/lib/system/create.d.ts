export type Config = import('../types.js').Config;
export type System = import('../types.js').System;
export type SystemIcons = import('../types.js').SystemIcons;
export type SystemStyles = import('../types.js').SystemStyles;
/**
 * @typedef {import('../types.js').Config} Config
 * @typedef {import('../types.js').System} System
 * @typedef {import('../types.js').SystemIcons} SystemIcons
 * @typedef {import('../types.js').SystemStyles} SystemStyles
 */
/**
 * Creates configuration for the system and components.
 *
 * @param {Partial<Config>} [config]
 * @returns {Config}
 */
export function createConfig(config?: Partial<import("../types.js").Config> | undefined): Config;
/**
 * Creates and defines all SVG icons for the system.
 *
 * @param {SystemIcons} [icons]
 * @returns {SystemIcons}
 */
export function createIcons(icons?: import("../types.js").SystemIcons | undefined): SystemIcons;
/**
 * Creates all styles for the system.
 *
 * @param {Partial<SystemStyles>} [styles]
 * @returns {SystemStyles}
 */
export function createStyles(styles?: Partial<import("../types.js").SystemStyles> | undefined): SystemStyles;
/**
 * Creates the source of truth for the `icons`, `styles`, `theme` spec.
 *
 * @param {Partial<System>} [system]
 * @returns {System}
 */
export function createSystem(system?: Partial<import("../types.js").System> | undefined): System;
export const createTheme: typeof createUinixUiTheme;
import { createTheme as createUinixUiTheme } from "uinix-theme";

export type AnyProps = import('../types.js').AnyProps;
export type Config = import('../types.js').Config;
export type CssRenderer = import('../types.js').CssRenderer;
export type H = import('../types.js').H;
export type Store = import('../types.js').Store;
export type StyleDefinition = import('../types.js').StyleDefinition;
export type System = import('../types.js').System;
export type SystemStyles = import('../types.js').SystemStyles;
export type SystemTheme = import('../types.js').SystemTheme;
/**
 * @typedef {import('../types.js').AnyProps} AnyProps
 * @typedef {import('../types.js').Config} Config
 * @typedef {import('../types.js').CssRenderer} CssRenderer
 * @typedef {import('../types.js').H} H
 * @typedef {import('../types.js').Store} Store
 * @typedef {import('../types.js').StyleDefinition} StyleDefinition
 * @typedef {import('../types.js').System} System
 * @typedef {import('../types.js').SystemStyles} SystemStyles
 * @typedef {import('../types.js').SystemTheme} SystemTheme
 */
/**
 * Retrieves the `config` attached to the store.
 *
 * @returns {Config}
 */
export function useConfig(): Config;
/**
 * Retrieves the `css` method attached with the provided `props`.
 *
 * @param {AnyProps} [props]
 * @returns {CssRenderer}
 */
export function useCss(props?: {
    [x: string]: any;
} | undefined): CssRenderer;
/**
 * Retrieves the `h` callback.
 *
 * @returns {H}
 */
export function useH(): H;
/**
 * Retrieves and renders an SVG element from `system.icons`.
 *
 * @param {string} icon
 *    An icon property path in `system.icons`.
 * @returns {ReturnType<H> | null}
 */
export function useIcon(icon: string): ReturnType<H> | null;
/**
 * Retrieves `system.styles`.
 *
 * @returns {SystemStyles}
 */
export function useStyles(): SystemStyles;
/**
 * Retrieves `system`.
 *
 * @returns {System}
 */
export function useSystem(): System;
/**
 * Retrieves `system.theme`.
 *
 * @param {string} [path]
 *    Theme property path
 * @returns {SystemTheme}
 */
export function useTheme(path?: string | undefined): SystemTheme;
/**
 * Retrieves the typography variant style in
 * `system.styles.typography.variants[variant]`.
 *
 * @param {string} variant
 *    Variant property path
 * @returns {StyleDefinition | undefined}
 */
export function useTypographyVariant(variant: string): StyleDefinition | undefined;
/**
 * Retrieves the variant style in `system.styles.variants[variant]`.
 *
 * @param {string} variant
 *    Variant property path
 * @returns {StyleDefinition | undefined}
 */
export function useVariant(variant: string): StyleDefinition | undefined;

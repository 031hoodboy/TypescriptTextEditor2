export type AnyProps = import('../types.js').AnyProps;
export type CustomElement = import('../types.js').CustomElement;
export type H = import('../types.js').H;
export type Styles = import('../types.js').Styles;
export type ElementProps = {
    /**
     * Renders `Element` as the specified HTML element or `CustomElement`.
     * Renders as a `HTMLDivElement` by default.
     */
    as?: string | import("../types.js").CustomElement | undefined;
    /**
     * A variant is a property path that accesses a style in
     * `system.styles.variants[variant]`.
     */
    variant?: string | undefined;
    /**
     * Style props are used by style functions provided in the `styles` prop.
     */
    styleProps?: {
        [x: string]: any;
    } | undefined;
    /**
     * Style objects or style functions can be provided as a single value or in
     * array-form for composition.
     */
    styles?: Styles;
};
/**
 * @typedef {import('../types.js').AnyProps} AnyProps
 * @typedef {import('../types.js').CustomElement} CustomElement
 * @typedef {import('../types.js').H} H
 * @typedef {import('../types.js').Styles} Styles
 *
 * @typedef ElementProps
 * @property {string | CustomElement} [as="div"]
 *    Renders `Element` as the specified HTML element or `CustomElement`.
 *    Renders as a `HTMLDivElement` by default.
 * @property {string} [variant=""]
 *    A variant is a property path that accesses a style in
 *    `system.styles.variants[variant]`.
 * @property {AnyProps} [styleProps]
 *    Style props are used by style functions provided in the `styles` prop.
 * @property {Styles} [styles]
 *    Style objects or style functions can be provided as a single value or in
 *    array-form for composition.
 */
/**
 * `Element` is the elementary building block in uinix-ui.
 *
 * It implements the other uinix-ui components (`Layout`, `Icon`, `Text`).
 * It functions essentially as a passthrough to a `HTMLElement`, with a minimal
 * API of just a few additional props that allow access to the UI system.
 *
 * @param {AnyProps & ElementProps} props
 * @returns {ReturnType<H>}
 */
export function Element(props: AnyProps & ElementProps): ReturnType<H>;

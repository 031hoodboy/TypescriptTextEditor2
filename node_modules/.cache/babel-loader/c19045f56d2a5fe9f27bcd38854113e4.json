{"ast":null,"code":"import _slicedToArray from \"/Users/hoodboy/Documents/htdocs/TypescriptTextEditor2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nexport { resolveShorthandProps };\n/**\n * @typedef {import('../types.js').AnyProps} Props\n * @typedef {import('../types.js').ShorthandPropsMapping} ShorthandPropsMapping\n * @typedef {import('../types.js').StyleObject} StyleObject\n */\n\n/**\n * Resolves provided `props` into an object containing\n * - shorthandPropsStyle: prop entries registered in `shorthandPropsMapping`\n * will be reduced into a StyleObject, assigning the prop value to the relating\n * CSS property name as defined in `shorthandPropsMapping`.\n * - nonShorthandProps: a filtered copy of `props` excluding prop entries that\n * are registered in `shorthandPropsMapping`.\n *\n * @param {ShorthandPropsMapping} shorthandPropsMapping\n * @returns {(props: Props) => {nonShorthandProps: Props, shorthandPropsStyle: StyleObject}}\n */\n\nvar resolveShorthandProps = function resolveShorthandProps(shorthandPropsMapping) {\n  return function (props) {\n    var shorthandPropSet = new Set(Object.values(shorthandPropsMapping).flat());\n    /** @type {Props} */\n\n    var initialNonShorthandProps = {};\n    var nonShorthandProps = Object.entries(props).reduce(function (acc, _ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          prop = _ref2[0],\n          value = _ref2[1];\n\n      if (!shorthandPropSet.has(prop)) {\n        acc[prop] = value;\n      }\n\n      return acc;\n    }, initialNonShorthandProps);\n    /** @type {ShorthandPropsMapping} */\n\n    var shorthandPropsStyle = {};\n    Object.entries(shorthandPropsMapping).forEach(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          cssProperty = _ref4[0],\n          propNames = _ref4[1];\n\n      /** @type any */\n      var propValue = propNames.reduce(function (acc, propName) {\n        return acc || props[propName];\n      }, undefined);\n\n      if (propValue !== undefined) {\n        shorthandPropsStyle[cssProperty] = propValue;\n      }\n    });\n    return {\n      nonShorthandProps: nonShorthandProps,\n      shorthandPropsStyle: shorthandPropsStyle\n    };\n  };\n};","map":{"version":3,"names":["resolveShorthandProps","shorthandPropsMapping","props","shorthandPropSet","Set","Object","values","flat","initialNonShorthandProps","nonShorthandProps","entries","reduce","acc","prop","value","has","shorthandPropsStyle","forEach","cssProperty","propNames","propValue","propName","undefined"],"sources":["/Users/hoodboy/Documents/htdocs/TypescriptTextEditor2/node_modules/uinix-ui/lib/util/resolve-shorthand-props.js"],"sourcesContent":["export {resolveShorthandProps};\n\n/**\n * @typedef {import('../types.js').AnyProps} Props\n * @typedef {import('../types.js').ShorthandPropsMapping} ShorthandPropsMapping\n * @typedef {import('../types.js').StyleObject} StyleObject\n */\n\n/**\n * Resolves provided `props` into an object containing\n * - shorthandPropsStyle: prop entries registered in `shorthandPropsMapping`\n * will be reduced into a StyleObject, assigning the prop value to the relating\n * CSS property name as defined in `shorthandPropsMapping`.\n * - nonShorthandProps: a filtered copy of `props` excluding prop entries that\n * are registered in `shorthandPropsMapping`.\n *\n * @param {ShorthandPropsMapping} shorthandPropsMapping\n * @returns {(props: Props) => {nonShorthandProps: Props, shorthandPropsStyle: StyleObject}}\n */\nconst resolveShorthandProps = (shorthandPropsMapping) => (props) => {\n  const shorthandPropSet = new Set(Object.values(shorthandPropsMapping).flat());\n\n  /** @type {Props} */\n  const initialNonShorthandProps = {};\n  const nonShorthandProps = Object.entries(props).reduce(\n    (acc, [prop, value]) => {\n      if (!shorthandPropSet.has(prop)) {\n        acc[prop] = value;\n      }\n\n      return acc;\n    },\n    initialNonShorthandProps,\n  );\n\n  /** @type {ShorthandPropsMapping} */\n  const shorthandPropsStyle = {};\n  Object.entries(shorthandPropsMapping).forEach(([cssProperty, propNames]) => {\n    /** @type any */\n    const propValue = propNames.reduce(\n      (acc, propName) => acc || props[propName],\n      undefined,\n    );\n    if (propValue !== undefined) {\n      shorthandPropsStyle[cssProperty] = propValue;\n    }\n  });\n\n  return {nonShorthandProps, shorthandPropsStyle};\n};\n"],"mappings":";AAAA,SAAQA,qBAAR;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,qBAAD;EAAA,OAA2B,UAACC,KAAD,EAAW;IAClE,IAAMC,gBAAgB,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,MAAP,CAAcL,qBAAd,EAAqCM,IAArC,EAAR,CAAzB;IAEA;;IACA,IAAMC,wBAAwB,GAAG,EAAjC;IACA,IAAMC,iBAAiB,GAAGJ,MAAM,CAACK,OAAP,CAAeR,KAAf,EAAsBS,MAAtB,CACxB,UAACC,GAAD,QAAwB;MAAA;MAAA,IAAjBC,IAAiB;MAAA,IAAXC,KAAW;;MACtB,IAAI,CAACX,gBAAgB,CAACY,GAAjB,CAAqBF,IAArB,CAAL,EAAiC;QAC/BD,GAAG,CAACC,IAAD,CAAH,GAAYC,KAAZ;MACD;;MAED,OAAOF,GAAP;IACD,CAPuB,EAQxBJ,wBARwB,CAA1B;IAWA;;IACA,IAAMQ,mBAAmB,GAAG,EAA5B;IACAX,MAAM,CAACK,OAAP,CAAeT,qBAAf,EAAsCgB,OAAtC,CAA8C,iBAA8B;MAAA;MAAA,IAA5BC,WAA4B;MAAA,IAAfC,SAAe;;MAC1E;MACA,IAAMC,SAAS,GAAGD,SAAS,CAACR,MAAV,CAChB,UAACC,GAAD,EAAMS,QAAN;QAAA,OAAmBT,GAAG,IAAIV,KAAK,CAACmB,QAAD,CAA/B;MAAA,CADgB,EAEhBC,SAFgB,CAAlB;;MAIA,IAAIF,SAAS,KAAKE,SAAlB,EAA6B;QAC3BN,mBAAmB,CAACE,WAAD,CAAnB,GAAmCE,SAAnC;MACD;IACF,CATD;IAWA,OAAO;MAACX,iBAAiB,EAAjBA,iBAAD;MAAoBO,mBAAmB,EAAnBA;IAApB,CAAP;EACD,CA9B6B;AAAA,CAA9B"},"metadata":{},"sourceType":"module"}
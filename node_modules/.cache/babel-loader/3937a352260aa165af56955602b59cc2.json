{"ast":null,"code":"import _slicedToArray from \"/Users/hoodboy/Documents/htdocs/TypescriptTextEditor2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport isHotkey from 'is-hotkey';\nimport { FORMAT_HOTKEYS } from './constants';\nimport { toggleMark } from './utils';\nexport var handleFormatHotkey = function handleFormatHotkey(editor) {\n  return function (event) {\n    Object.entries(FORMAT_HOTKEYS).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          hotkey = _ref2[0],\n          mark = _ref2[1];\n\n      if (isHotkey(hotkey, event)) {\n        event.preventDefault();\n        toggleMark(editor, mark);\n      }\n    });\n  };\n};","map":{"version":3,"names":["isHotkey","FORMAT_HOTKEYS","toggleMark","handleFormatHotkey","editor","event","Object","entries","forEach","hotkey","mark","preventDefault"],"sources":["/Users/hoodboy/Documents/htdocs/TypescriptTextEditor2/src/TextEditor/format/handleFormatHotkey.ts"],"sourcesContent":["import isHotkey from 'is-hotkey';\n\nimport { FORMAT_HOTKEYS } from './constants';\nimport { toggleMark } from './utils';\n\nexport const handleFormatHotkey = (editor) => (event) => {\n  Object.entries(FORMAT_HOTKEYS).forEach(([hotkey, mark]) => {\n    if (isHotkey(hotkey, event)) {\n      event.preventDefault();\n      toggleMark(editor, mark);\n    }\n  });\n};\n"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AAEA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,MAAD;EAAA,OAAY,UAACC,KAAD,EAAW;IACvDC,MAAM,CAACC,OAAP,CAAeN,cAAf,EAA+BO,OAA/B,CAAuC,gBAAoB;MAAA;MAAA,IAAlBC,MAAkB;MAAA,IAAVC,IAAU;;MACzD,IAAIV,QAAQ,CAACS,MAAD,EAASJ,KAAT,CAAZ,EAA6B;QAC3BA,KAAK,CAACM,cAAN;QACAT,UAAU,CAACE,MAAD,EAASM,IAAT,CAAV;MACD;IACF,CALD;EAMD,CAPiC;AAAA,CAA3B"},"metadata":{},"sourceType":"module"}
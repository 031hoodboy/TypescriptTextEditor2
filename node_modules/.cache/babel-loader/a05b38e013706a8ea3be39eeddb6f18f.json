{"ast":null,"code":"import _objectSpread from \"/Users/hoodboy/Documents/htdocs/TypescriptTextEditor2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { combineRules } from 'fela';\nimport { render } from 'fela-dom';\nimport { createRenderer } from '../renderer/create-renderer.js';\nimport { createConfig, createSystem } from './create.js';\nexport { load, getStore };\n/**\n * @typedef {import('../types.js').Config} Config\n * @typedef {import('../types.js').CreateCssRenderer} CreateCssRenderer\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Store} Store\n * @typedef {import('../types.js').System} System\n *\n\n/** @type {Store} */\n\nvar store;\n/**\n * Returns the system store.\n *\n * @returns {Store}\n */\n\nvar getStore = function getStore() {\n  return store;\n};\n/**\n * Loads the provided system into a store.\n *\n * @param {object} preset\n * @param {H} preset.h\n *    Hyperscript h function.\n * @param {Partial<System>} [preset.system]\n *    A partial system can be provided.\n * @param {Partial<Config>} [preset.config]\n *    A partial system configuration can be provided.\n * @returns {void}\n */\n\n\nvar load = function load(_ref) {\n  var providedConfig = _ref.config,\n      h = _ref.h,\n      providedSystem = _ref.system;\n  var config = createConfig(providedConfig);\n  var system = createSystem(providedSystem);\n  var renderer = createRenderer(system, config);\n  /** @type {CreateCssRenderer} */\n\n  var createCssRenderer = function createCssRenderer() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return function () {\n      return (// @ts-ignore: source code incorrectly-typed (`combineRules` CAN accept either `TRule` or `IStyle`)\n        renderer.renderRule(combineRules.apply(void 0, arguments), _objectSpread(_objectSpread({}, props), {}, {\n          theme: system.theme\n        }))\n      );\n    };\n  }; // Aside from rendering CSS, uinix-ui supports server-side rendering.\n\n\n  if (typeof window !== 'undefined') {\n    render(renderer);\n  }\n\n  store = {\n    config: config,\n    createCssRenderer: createCssRenderer,\n    h: h,\n    system: system\n  };\n};","map":{"version":3,"names":["combineRules","render","createRenderer","createConfig","createSystem","load","getStore","store","providedConfig","config","h","providedSystem","system","renderer","createCssRenderer","props","renderRule","theme","window"],"sources":["/Users/hoodboy/Documents/htdocs/TypescriptTextEditor2/node_modules/uinix-ui/lib/system/load.js"],"sourcesContent":["import {combineRules} from 'fela';\nimport {render} from 'fela-dom';\n\nimport {createRenderer} from '../renderer/create-renderer.js';\nimport {createConfig, createSystem} from './create.js';\n\nexport {load, getStore};\n\n/**\n * @typedef {import('../types.js').Config} Config\n * @typedef {import('../types.js').CreateCssRenderer} CreateCssRenderer\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Store} Store\n * @typedef {import('../types.js').System} System\n *\n\n/** @type {Store} */\nlet store;\n\n/**\n * Returns the system store.\n *\n * @returns {Store}\n */\nconst getStore = () => store;\n\n/**\n * Loads the provided system into a store.\n *\n * @param {object} preset\n * @param {H} preset.h\n *    Hyperscript h function.\n * @param {Partial<System>} [preset.system]\n *    A partial system can be provided.\n * @param {Partial<Config>} [preset.config]\n *    A partial system configuration can be provided.\n * @returns {void}\n */\nconst load = ({config: providedConfig, h, system: providedSystem}) => {\n  const config = createConfig(providedConfig);\n  const system = createSystem(providedSystem);\n  const renderer = createRenderer(system, config);\n\n  /** @type {CreateCssRenderer} */\n  const createCssRenderer =\n    (props = {}) =>\n    (...rules) =>\n      // @ts-ignore: source code incorrectly-typed (`combineRules` CAN accept either `TRule` or `IStyle`)\n      renderer.renderRule(combineRules(...rules), {\n        ...props,\n        theme: system.theme,\n      });\n\n  // Aside from rendering CSS, uinix-ui supports server-side rendering.\n  if (typeof window !== 'undefined') {\n    render(renderer);\n  }\n\n  store = {\n    config,\n    createCssRenderer,\n    h,\n    system,\n  };\n};\n"],"mappings":";AAAA,SAAQA,YAAR,QAA2B,MAA3B;AACA,SAAQC,MAAR,QAAqB,UAArB;AAEA,SAAQC,cAAR,QAA6B,gCAA7B;AACA,SAAQC,YAAR,EAAsBC,YAAtB,QAAyC,aAAzC;AAEA,SAAQC,IAAR,EAAcC,QAAd;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,KAAJ;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAMD,QAAQ,GAAG,SAAXA,QAAW;EAAA,OAAMC,KAAN;AAAA,CAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMF,IAAI,GAAG,SAAPA,IAAO,OAAyD;EAAA,IAA/CG,cAA+C,QAAvDC,MAAuD;EAAA,IAA/BC,CAA+B,QAA/BA,CAA+B;EAAA,IAApBC,cAAoB,QAA5BC,MAA4B;EACpE,IAAMH,MAAM,GAAGN,YAAY,CAACK,cAAD,CAA3B;EACA,IAAMI,MAAM,GAAGR,YAAY,CAACO,cAAD,CAA3B;EACA,IAAME,QAAQ,GAAGX,cAAc,CAACU,MAAD,EAASH,MAAT,CAA/B;EAEA;;EACA,IAAMK,iBAAiB,GACrB,SADIA,iBACJ;IAAA,IAACC,KAAD,uEAAS,EAAT;IAAA,OACA;MAAA,OACE;QACAF,QAAQ,CAACG,UAAT,CAAoBhB,YAAY,MAAZ,mBAApB,kCACKe,KADL;UAEEE,KAAK,EAAEL,MAAM,CAACK;QAFhB;MAFF;IAAA,CADA;EAAA,CADF,CANoE,CAepE;;;EACA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;IACjCjB,MAAM,CAACY,QAAD,CAAN;EACD;;EAEDN,KAAK,GAAG;IACNE,MAAM,EAANA,MADM;IAENK,iBAAiB,EAAjBA,iBAFM;IAGNJ,CAAC,EAADA,CAHM;IAINE,MAAM,EAANA;EAJM,CAAR;AAMD,CA1BD"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export { isPlainObject };\n/**\n * Checks if a value is a plain object.\n *\n * Based on https://github.com/sindresorhus/is-plain-obj.\n *\n * An object is plain if it is created by either:\n * - {}\n * - new Object()\n * - Object.create(null)\n *\n * @template A\n * @param {A} x\n * @returns {boolean}\n */\n\nvar isPlainObject = function isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n};","map":{"version":3,"names":["isPlainObject","x","Object","prototype","toString","call","getPrototypeOf"],"sources":["/Users/hoodboy/Documents/htdocs/TypescriptTextEditor2/node_modules/uinix-fp/lib/is-plain-object.js"],"sourcesContent":["export {isPlainObject};\n\n/**\n * Checks if a value is a plain object.\n *\n * Based on https://github.com/sindresorhus/is-plain-obj.\n *\n * An object is plain if it is created by either:\n * - {}\n * - new Object()\n * - Object.create(null)\n *\n * @template A\n * @param {A} x\n * @returns {boolean}\n */\nconst isPlainObject = (x) => {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n};\n"],"mappings":"AAAA,SAAQA,aAAR;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAO;EAC3B,IAAIC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,CAA/B,MAAsC,iBAA1C,EAA6D;IAC3D,OAAO,KAAP;EACD;;EAED,IAAME,SAAS,GAAGD,MAAM,CAACI,cAAP,CAAsBL,CAAtB,CAAlB;EACA,OAAOE,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAKD,MAAM,CAACC,SAAlD;AACD,CAPD"},"metadata":{},"sourceType":"module"}
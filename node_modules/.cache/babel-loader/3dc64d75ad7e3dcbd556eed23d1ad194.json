{"ast":null,"code":"import { props } from 'uinix-fp';\nimport { parseSvgElement } from '../util/parse-svg-element.js';\nimport { getStore } from './load.js';\nexport { useConfig, useCss, useH, useIcon, useStyles, useSystem, useTheme, useTypographyVariant, useVariant };\n/**\n * @typedef {import('../types.js').AnyProps} AnyProps\n * @typedef {import('../types.js').Config} Config\n * @typedef {import('../types.js').CssRenderer} CssRenderer\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Store} Store\n * @typedef {import('../types.js').StyleDefinition} StyleDefinition\n * @typedef {import('../types.js').System} System\n * @typedef {import('../types.js').SystemStyles} SystemStyles\n * @typedef {import('../types.js').SystemTheme} SystemTheme\n */\n\n/**\n * Retrieves the `config` attached to the store.\n *\n * @returns {Config}\n */\n\nvar useConfig = function useConfig() {\n  return getStore().config;\n};\n/**\n * Retrieves the `css` method attached with the provided `props`.\n *\n * @param {AnyProps} [props]\n * @returns {CssRenderer}\n */\n\n\nvar useCss = function useCss(props) {\n  return getStore().createCssRenderer(props);\n};\n/**\n * Retrieves the `h` callback.\n *\n * @returns {H}\n */\n\n\nvar useH = function useH() {\n  return getStore().h;\n};\n/**\n * Retrieves and renders an SVG element from `system.icons`.\n *\n * @param {string} icon\n *    An icon property path in `system.icons`.\n * @returns {ReturnType<H> | null}\n */\n\n\nvar useIcon = function useIcon(icon) {\n  var svg = props(icon)(useSystem().icons);\n  var h = useH();\n  return parseSvgElement({\n    h: h,\n    svg: svg\n  });\n};\n/**\n * Retrieves `system.styles`.\n *\n * @returns {SystemStyles}\n */\n\n\nvar useStyles = function useStyles() {\n  return useSystem().styles;\n};\n/**\n * Retrieves `system`.\n *\n * @returns {System}\n */\n\n\nvar useSystem = function useSystem() {\n  return getStore().system;\n};\n/**\n * Retrieves `system.theme`.\n *\n * @param {string} [path]\n *    Theme property path\n * @returns {SystemTheme}\n */\n\n\nvar useTheme = function useTheme() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return props(path)(useSystem().theme);\n};\n/**\n * Retrieves the typography variant style in\n * `system.styles.typography.variants[variant]`.\n *\n * @param {string} variant\n *    Variant property path\n * @returns {StyleDefinition | undefined}\n */\n\n\nvar useTypographyVariant = function useTypographyVariant(variant) {\n  return props(\"typography.variants.\".concat(variant))(useSystem().styles);\n};\n/**\n * Retrieves the variant style in `system.styles.variants[variant]`.\n *\n * @param {string} variant\n *    Variant property path\n * @returns {StyleDefinition | undefined}\n */\n\n\nvar useVariant = function useVariant(variant) {\n  return props(\"variants.\".concat(variant))(useSystem().styles);\n};","map":{"version":3,"names":["props","parseSvgElement","getStore","useConfig","useCss","useH","useIcon","useStyles","useSystem","useTheme","useTypographyVariant","useVariant","config","createCssRenderer","h","icon","svg","icons","styles","system","path","theme","variant"],"sources":["/Users/hoodboy/Documents/htdocs/TypescriptTextEditor/node_modules/uinix-ui/lib/system/hooks.js"],"sourcesContent":["import {props} from 'uinix-fp';\n\nimport {parseSvgElement} from '../util/parse-svg-element.js';\nimport {getStore} from './load.js';\n\nexport {\n  useConfig,\n  useCss,\n  useH,\n  useIcon,\n  useStyles,\n  useSystem,\n  useTheme,\n  useTypographyVariant,\n  useVariant,\n};\n\n/**\n * @typedef {import('../types.js').AnyProps} AnyProps\n * @typedef {import('../types.js').Config} Config\n * @typedef {import('../types.js').CssRenderer} CssRenderer\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Store} Store\n * @typedef {import('../types.js').StyleDefinition} StyleDefinition\n * @typedef {import('../types.js').System} System\n * @typedef {import('../types.js').SystemStyles} SystemStyles\n * @typedef {import('../types.js').SystemTheme} SystemTheme\n */\n\n/**\n * Retrieves the `config` attached to the store.\n *\n * @returns {Config}\n */\nconst useConfig = () => getStore().config;\n\n/**\n * Retrieves the `css` method attached with the provided `props`.\n *\n * @param {AnyProps} [props]\n * @returns {CssRenderer}\n */\nconst useCss = (props) => getStore().createCssRenderer(props);\n\n/**\n * Retrieves the `h` callback.\n *\n * @returns {H}\n */\nconst useH = () => getStore().h;\n\n/**\n * Retrieves and renders an SVG element from `system.icons`.\n *\n * @param {string} icon\n *    An icon property path in `system.icons`.\n * @returns {ReturnType<H> | null}\n */\nconst useIcon = (icon) => {\n  const svg = props(icon)(useSystem().icons);\n  const h = useH();\n  return parseSvgElement({h, svg});\n};\n\n/**\n * Retrieves `system.styles`.\n *\n * @returns {SystemStyles}\n */\nconst useStyles = () => useSystem().styles;\n\n/**\n * Retrieves `system`.\n *\n * @returns {System}\n */\nconst useSystem = () => getStore().system;\n\n/**\n * Retrieves `system.theme`.\n *\n * @param {string} [path]\n *    Theme property path\n * @returns {SystemTheme}\n */\nconst useTheme = (path = '') => props(path)(useSystem().theme);\n\n/**\n * Retrieves the typography variant style in\n * `system.styles.typography.variants[variant]`.\n *\n * @param {string} variant\n *    Variant property path\n * @returns {StyleDefinition | undefined}\n */\nconst useTypographyVariant = (variant) =>\n  props(`typography.variants.${variant}`)(useSystem().styles);\n\n/**\n * Retrieves the variant style in `system.styles.variants[variant]`.\n *\n * @param {string} variant\n *    Variant property path\n * @returns {StyleDefinition | undefined}\n */\nconst useVariant = (variant) =>\n  props(`variants.${variant}`)(useSystem().styles);\n"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,UAApB;AAEA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,SAAQC,QAAR,QAAuB,WAAvB;AAEA,SACEC,SADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,OAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,QAPF,EAQEC,oBARF,EASEC,UATF;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAMR,SAAS,GAAG,SAAZA,SAAY;EAAA,OAAMD,QAAQ,GAAGU,MAAjB;AAAA,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMR,MAAM,GAAG,SAATA,MAAS,CAACJ,KAAD;EAAA,OAAWE,QAAQ,GAAGW,iBAAX,CAA6Bb,KAA7B,CAAX;AAAA,CAAf;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAMK,IAAI,GAAG,SAAPA,IAAO;EAAA,OAAMH,QAAQ,GAAGY,CAAjB;AAAA,CAAb;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMR,OAAO,GAAG,SAAVA,OAAU,CAACS,IAAD,EAAU;EACxB,IAAMC,GAAG,GAAGhB,KAAK,CAACe,IAAD,CAAL,CAAYP,SAAS,GAAGS,KAAxB,CAAZ;EACA,IAAMH,CAAC,GAAGT,IAAI,EAAd;EACA,OAAOJ,eAAe,CAAC;IAACa,CAAC,EAADA,CAAD;IAAIE,GAAG,EAAHA;EAAJ,CAAD,CAAtB;AACD,CAJD;AAMA;AACA;AACA;AACA;AACA;;;AACA,IAAMT,SAAS,GAAG,SAAZA,SAAY;EAAA,OAAMC,SAAS,GAAGU,MAAlB;AAAA,CAAlB;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAMV,SAAS,GAAG,SAAZA,SAAY;EAAA,OAAMN,QAAQ,GAAGiB,MAAjB;AAAA,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMV,QAAQ,GAAG,SAAXA,QAAW;EAAA,IAACW,IAAD,uEAAQ,EAAR;EAAA,OAAepB,KAAK,CAACoB,IAAD,CAAL,CAAYZ,SAAS,GAAGa,KAAxB,CAAf;AAAA,CAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMX,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACY,OAAD;EAAA,OAC3BtB,KAAK,+BAAwBsB,OAAxB,EAAL,CAAwCd,SAAS,GAAGU,MAApD,CAD2B;AAAA,CAA7B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMP,UAAU,GAAG,SAAbA,UAAa,CAACW,OAAD;EAAA,OACjBtB,KAAK,oBAAasB,OAAb,EAAL,CAA6Bd,SAAS,GAAGU,MAAzC,CADiB;AAAA,CAAnB"},"metadata":{},"sourceType":"module"}
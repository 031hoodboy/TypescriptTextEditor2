{"ast":null,"code":"import deepmerge from 'deepmerge';\nexport { merge };\n/**\n * Deepmerge from https://github.com/TehShrike/deepmerge.\n *\n * @template A, B\n * @param {Partial<A>} x\n * @returns {(y: Partial<B>) => A & B}\n */\n\nvar merge = function merge(x) {\n  return function (y) {\n    return deepmerge(x, y, {\n      arrayMerge: arrayMerge\n    });\n  };\n};\n/**\n * Always return the second array when merging arrays.\n *\n * @template A, B\n * @param {A} _xs1 first array\n * @param {B} xs2 second array\n * @returns {B}\n */\n\n\nvar arrayMerge = function arrayMerge(_xs1, xs2) {\n  return xs2;\n};","map":{"version":3,"names":["deepmerge","merge","x","y","arrayMerge","_xs1","xs2"],"sources":["/Users/hoodboy/Documents/htdocs/TypescriptTextEditor2/node_modules/uinix-fp/lib/merge.js"],"sourcesContent":["import deepmerge from 'deepmerge';\n\nexport {merge};\n\n/**\n * Deepmerge from https://github.com/TehShrike/deepmerge.\n *\n * @template A, B\n * @param {Partial<A>} x\n * @returns {(y: Partial<B>) => A & B}\n */\nconst merge = (x) => (y) => deepmerge(x, y, {arrayMerge});\n\n/**\n * Always return the second array when merging arrays.\n *\n * @template A, B\n * @param {A} _xs1 first array\n * @param {B} xs2 second array\n * @returns {B}\n */\nconst arrayMerge = (_xs1, xs2) => xs2;\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AAEA,SAAQC,KAAR;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,CAAD;EAAA,OAAO,UAACC,CAAD;IAAA,OAAOH,SAAS,CAACE,CAAD,EAAIC,CAAJ,EAAO;MAACC,UAAU,EAAVA;IAAD,CAAP,CAAhB;EAAA,CAAP;AAAA,CAAd;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOC,GAAP;EAAA,OAAeA,GAAf;AAAA,CAAnB"},"metadata":{},"sourceType":"module"}
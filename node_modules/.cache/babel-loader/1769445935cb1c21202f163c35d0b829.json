{"ast":null,"code":"import { toH } from 'hast-to-hyperscript';\nimport { parse } from 'svg-parser';\nexport { parseSvgElement };\n/**\n * @typedef {import('../types.js').H} H\n */\n\n/**\n * Renders an SVG string with the provided `h` into an SVG element.\n *\n * @param {object} options\n * @param {H} options.h\n * @param {string} [options.svg]\n * @returns {ReturnType<H> | null}\n */\n\nvar parseSvgElement = function parseSvgElement(_ref) {\n  var h = _ref.h,\n      svg = _ref.svg;\n\n  if (!svg) {\n    return null;\n  }\n\n  try {\n    return toH(h, parse(svg));\n  } catch (_unused) {\n    // Swallow error and return null if SVG fails to parse.\n    return null;\n  }\n};","map":{"version":3,"names":["toH","parse","parseSvgElement","h","svg"],"sources":["/Users/hoodboy/Documents/htdocs/TypescriptTextEditor2/node_modules/uinix-ui/lib/util/parse-svg-element.js"],"sourcesContent":["import {toH} from 'hast-to-hyperscript';\nimport {parse} from 'svg-parser';\n\nexport {parseSvgElement};\n\n/**\n * @typedef {import('../types.js').H} H\n */\n\n/**\n * Renders an SVG string with the provided `h` into an SVG element.\n *\n * @param {object} options\n * @param {H} options.h\n * @param {string} [options.svg]\n * @returns {ReturnType<H> | null}\n */\nconst parseSvgElement = ({h, svg}) => {\n  if (!svg) {\n    return null;\n  }\n\n  try {\n    return toH(h, parse(svg));\n  } catch {\n    // Swallow error and return null if SVG fails to parse.\n    return null;\n  }\n};\n"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,qBAAlB;AACA,SAAQC,KAAR,QAAoB,YAApB;AAEA,SAAQC,eAAR;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,OAAc;EAAA,IAAZC,CAAY,QAAZA,CAAY;EAAA,IAATC,GAAS,QAATA,GAAS;;EACpC,IAAI,CAACA,GAAL,EAAU;IACR,OAAO,IAAP;EACD;;EAED,IAAI;IACF,OAAOJ,GAAG,CAACG,CAAD,EAAIF,KAAK,CAACG,GAAD,CAAT,CAAV;EACD,CAFD,CAEE,gBAAM;IACN;IACA,OAAO,IAAP;EACD;AACF,CAXD"},"metadata":{},"sourceType":"module"}
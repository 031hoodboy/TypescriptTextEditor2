{"ast":null,"code":"import _objectSpread from \"/Users/hoodboy/Documents/htdocs/TypescriptTextEditor/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/hoodboy/Documents/htdocs/TypescriptTextEditor/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"color\", \"height\", \"icon\", \"size\", \"styleProps\", \"styles\", \"width\", \"onClick\"];\nimport { filter } from 'uinix-fp';\nimport { useIcon } from '../system/hooks.js';\nimport { mergeStyles } from '../util/merge-styles.js';\nimport { Element } from './element.js';\nexport { Icon };\n/**\n * @typedef {import('../types.js').AnyProps} AnyProps\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').ResponsiveStyleValue} ResponsiveStyleValue\n * @typedef {import('../types.js').Styles} Styles\n *\n * @typedef IconProps\n * @property {ResponsiveStyleValue} [color='currentColor']\n *    Sets the icon SVG container's `color`.  You can use a theme-based value.\n *    If an icon SVG is using `'currentColor'` for appropriate color attributes\n *    (e.g. `stroke`, `fill`), the `Icon will apply the specified color to the\n *    rendered `HTMLSVGElement`.\n * @property {string} [icon='']\n *    Renders the specified icon from `system.icons[icon]` as an\n *    `HTMLSVGElement`.\n * @property {string} [variant]\n *    A variant is a property path that accesses a style in\n *    `system.styles.variants[variant]`.\n * @property {function} [onClick]\n *    Click handler for the icon.  If specified, will render `Icon` as\n *    a semantic `HTMLButtonElement` instead of a `HTMLDivElement`.\n * @property {AnyProps} [styleProps]\n *    Style props are used by style functions provided in the `styles` prop.\n * @property {Styles} [styles]\n *    Style objects or style functions can be provided as a single value or in\n *    array-form for composition.\n * @property {ResponsiveStyleValue} [color]\n *    Sets the icon SVG's `color`.  You can use a theme-based value.\n *    `'currentColor'` is supported.\n * @property {ResponsiveStyleValue} [height]\n *    Sets the icon SVG's `height`.  You can use a theme-based value.\n * @property {ResponsiveStyleValue} [size]\n *    Sets the icon SVG's `height` and `width`.  You can use a theme-based\n *    value.\n * @property {ResponsiveStyleValue} [width]\n *    Sets the icon SVG's `width`.  You can use a theme-based value.\n */\n\n/**\n * `Icon` is a component primitive interoperating with the `system.icons` spec.\n *\n * It provides easy ways to render and configure SVG icons.\n *\n * `Icon` is composed from `Element`, and therefore inherits all properties and\n * configurations from `Element`.\n *\n * @param {AnyProps & IconProps} props\n * @returns {ReturnType<H>}\n */\n\nvar Icon = function Icon(props) {\n  var _props$color = props.color,\n      color = _props$color === void 0 ? 'currentColor' : _props$color,\n      height = props.height,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? '' : _props$icon,\n      size = props.size,\n      styleProps = props.styleProps,\n      styles = props.styles,\n      width = props.width,\n      onClick = props.onClick,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var iconSvg = useIcon(icon);\n  var style = filter(function (x) {\n    return x !== undefined;\n  })({\n    alignItems: 'center',\n    background: 'none',\n    border: 'none',\n    color: color,\n    display: 'flex',\n    flex: 'none',\n    margin: 0,\n    padding: 0,\n    '> svg': {\n      height: height || size,\n      width: width || size\n    }\n  });\n  return Element(_objectSpread(_objectSpread({}, restProps), {}, {\n    as: onClick ? 'button' : 'div',\n    children: iconSvg,\n    styleProps: styleProps,\n    styles: mergeStyles([style, styles]),\n    onClick: onClick\n  }));\n};","map":{"version":3,"names":["filter","useIcon","mergeStyles","Element","Icon","props","color","height","icon","size","styleProps","styles","width","onClick","restProps","iconSvg","style","x","undefined","alignItems","background","border","display","flex","margin","padding","as","children"],"sources":["/Users/hoodboy/Documents/htdocs/TypescriptTextEditor/node_modules/uinix-ui/lib/components/icon.js"],"sourcesContent":["import {filter} from 'uinix-fp';\n\nimport {useIcon} from '../system/hooks.js';\nimport {mergeStyles} from '../util/merge-styles.js';\nimport {Element} from './element.js';\n\nexport {Icon};\n\n/**\n * @typedef {import('../types.js').AnyProps} AnyProps\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').ResponsiveStyleValue} ResponsiveStyleValue\n * @typedef {import('../types.js').Styles} Styles\n *\n * @typedef IconProps\n * @property {ResponsiveStyleValue} [color='currentColor']\n *    Sets the icon SVG container's `color`.  You can use a theme-based value.\n *    If an icon SVG is using `'currentColor'` for appropriate color attributes\n *    (e.g. `stroke`, `fill`), the `Icon will apply the specified color to the\n *    rendered `HTMLSVGElement`.\n * @property {string} [icon='']\n *    Renders the specified icon from `system.icons[icon]` as an\n *    `HTMLSVGElement`.\n * @property {string} [variant]\n *    A variant is a property path that accesses a style in\n *    `system.styles.variants[variant]`.\n * @property {function} [onClick]\n *    Click handler for the icon.  If specified, will render `Icon` as\n *    a semantic `HTMLButtonElement` instead of a `HTMLDivElement`.\n * @property {AnyProps} [styleProps]\n *    Style props are used by style functions provided in the `styles` prop.\n * @property {Styles} [styles]\n *    Style objects or style functions can be provided as a single value or in\n *    array-form for composition.\n * @property {ResponsiveStyleValue} [color]\n *    Sets the icon SVG's `color`.  You can use a theme-based value.\n *    `'currentColor'` is supported.\n * @property {ResponsiveStyleValue} [height]\n *    Sets the icon SVG's `height`.  You can use a theme-based value.\n * @property {ResponsiveStyleValue} [size]\n *    Sets the icon SVG's `height` and `width`.  You can use a theme-based\n *    value.\n * @property {ResponsiveStyleValue} [width]\n *    Sets the icon SVG's `width`.  You can use a theme-based value.\n */\n\n/**\n * `Icon` is a component primitive interoperating with the `system.icons` spec.\n *\n * It provides easy ways to render and configure SVG icons.\n *\n * `Icon` is composed from `Element`, and therefore inherits all properties and\n * configurations from `Element`.\n *\n * @param {AnyProps & IconProps} props\n * @returns {ReturnType<H>}\n */\nconst Icon = (props) => {\n  const {\n    color = 'currentColor',\n    height,\n    icon = '',\n    size,\n    styleProps,\n    styles,\n    width,\n    onClick,\n    ...restProps\n  } = props;\n\n  const iconSvg = useIcon(icon);\n\n  const style = filter((x) => x !== undefined)({\n    alignItems: 'center',\n    background: 'none',\n    border: 'none',\n    color,\n    display: 'flex',\n    flex: 'none',\n    margin: 0,\n    padding: 0,\n    '> svg': {\n      height: height || size,\n      width: width || size,\n    },\n  });\n\n  return Element({\n    ...restProps,\n    as: onClick ? 'button' : 'div',\n    children: iconSvg,\n    styleProps,\n    styles: mergeStyles([style, styles]),\n    onClick,\n  });\n};\n"],"mappings":";;;AAAA,SAAQA,MAAR,QAAqB,UAArB;AAEA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,SAAQC,OAAR,QAAsB,cAAtB;AAEA,SAAQC,IAAR;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;EACtB,mBAUIA,KAVJ,CACEC,KADF;EAAA,IACEA,KADF,6BACU,cADV;EAAA,IAEEC,MAFF,GAUIF,KAVJ,CAEEE,MAFF;EAAA,kBAUIF,KAVJ,CAGEG,IAHF;EAAA,IAGEA,IAHF,4BAGS,EAHT;EAAA,IAIEC,IAJF,GAUIJ,KAVJ,CAIEI,IAJF;EAAA,IAKEC,UALF,GAUIL,KAVJ,CAKEK,UALF;EAAA,IAMEC,MANF,GAUIN,KAVJ,CAMEM,MANF;EAAA,IAOEC,KAPF,GAUIP,KAVJ,CAOEO,KAPF;EAAA,IAQEC,OARF,GAUIR,KAVJ,CAQEQ,OARF;EAAA,IASKC,SATL,4BAUIT,KAVJ;;EAYA,IAAMU,OAAO,GAAGd,OAAO,CAACO,IAAD,CAAvB;EAEA,IAAMQ,KAAK,GAAGhB,MAAM,CAAC,UAACiB,CAAD;IAAA,OAAOA,CAAC,KAAKC,SAAb;EAAA,CAAD,CAAN,CAA+B;IAC3CC,UAAU,EAAE,QAD+B;IAE3CC,UAAU,EAAE,MAF+B;IAG3CC,MAAM,EAAE,MAHmC;IAI3Cf,KAAK,EAALA,KAJ2C;IAK3CgB,OAAO,EAAE,MALkC;IAM3CC,IAAI,EAAE,MANqC;IAO3CC,MAAM,EAAE,CAPmC;IAQ3CC,OAAO,EAAE,CARkC;IAS3C,SAAS;MACPlB,MAAM,EAAEA,MAAM,IAAIE,IADX;MAEPG,KAAK,EAAEA,KAAK,IAAIH;IAFT;EATkC,CAA/B,CAAd;EAeA,OAAON,OAAO,iCACTW,SADS;IAEZY,EAAE,EAAEb,OAAO,GAAG,QAAH,GAAc,KAFb;IAGZc,QAAQ,EAAEZ,OAHE;IAIZL,UAAU,EAAVA,UAJY;IAKZC,MAAM,EAAET,WAAW,CAAC,CAACc,KAAD,EAAQL,MAAR,CAAD,CALP;IAMZE,OAAO,EAAPA;EANY,GAAd;AAQD,CAtCD"},"metadata":{},"sourceType":"module"}
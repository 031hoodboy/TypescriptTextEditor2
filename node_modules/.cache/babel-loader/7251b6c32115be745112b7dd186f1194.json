{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/hoodboy/Documents/htdocs/TypescriptTextEditor2/src/TextEditor/types.ts"],"sourcesContent":["/**\n * The content AST supporting unified representation of advanced content features (e.g. Rich-text formatting, mentions).\n */\nexport type ContentAst = AnyNode[];\n\n/**\n * A TextNode is a leaf node that represents text content.\n *\n * - Text content is what is meaningfully human-readable content.\n */\nexport interface TextNode {\n  text: string;\n}\n\n/**\n * A MarkNode is a TextNode that includes optional mark-level formatting for the associated text content.\n */\nexport interface MarkNode extends TextNode {\n  bold?: boolean;\n  code?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n}\n\n/**\n * A BlockNode is a non-leaf node that contains other nodes as children.\n *\n * - Typical blocknodes include HTML block elements (e.g. `blockquote`, `h1`, `p`).\n * - Block nodes can be optionally aligned\n */\nexport interface BlockNode {\n  type: BlockNodeType;\n  children: AnyNode[];\n  align?: BlockAlign;\n}\n\n/**\n * A MentionNode is a \"BlockNode\" representing a mention.\n *\n * - A MentionNode keeps track of the `Entity` that is being mentioned.  This `Entity` supports further usage to derive and use the entity based on its provided `id` and `type`.\n * - A MentionNode should always include a single-element TextNode reflecting the text content of that mention.\n */\nexport interface MentionNode {\n  type: MentionNodeType;\n  entity: Entity;\n  children: [TextNode]; // should contain a single-element TextNode\n}\n\n// external interfaces\nexport interface Entity {\n  id: Uuid;\n  type: EntityType;\n}\n\nexport type EntityType = 'user' | 'document';\n\n// type aliases\nexport type BlockAlign = 'left' | 'center' | 'right' | 'justify';\nexport type BlockNodeType =\n  | 'blockquote'\n  | 'h1'\n  | 'h2'\n  | 'li'\n  | 'ol'\n  | 'p'\n  | 'pre'\n  | 'ul';\nexport type MentionNodeType = 'mention';\nexport type AnyNode = MarkNode | BlockNode | MentionNode;\nexport type Uuid = string;\n"],"mappings":""},"metadata":{},"sourceType":"module"}